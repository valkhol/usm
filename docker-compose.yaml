version: '3.0'

services:
    usm-api:
        image: usm-api
        build:
            context: "."
        container_name: usm-api
        ports:
            - "8110:8110"
        environment:
            - MONGO_HOST
            - MONGO_PORT
            - MONGO_DB
            - MONGO_USER_FILES_BUCKET
            - MONGO_POST_FILES_BUCKET
            - REDIS_HOST
            - REDIS_PORT
            - REDIS_DB
            - ELASTICSEARCH_HOST
            - ELASTICSEARCH_PORT
        depends_on:
            - mongo
            - redis
            - usm-worker
            - usm-elastic
        volumes:
            - "${PWD}:/app"
        networks:
            - usm-net

    usm-test:
        image: usm-test
        container_name: usm-test
        build:
            context: "."
            dockerfile: Dockerfile-test
        depends_on:
            - mongo
    mongo:
        image: mongo:5.0.17
        container_name: usm-mongo
        ports:
            - "27017:27017"
        networks:
            - usm-net

    redis:
        image: redis
        container_name: usm-redis
        ports:
            - "6379:6379"
        networks:
            - usm-net

    usm-elastic:
        container_name: usm-elastic
        image: elasticsearch:8.8.0
        ports:
            - 9200:9200
            - 9300:9300
        environment:
            - discovery.type=single-node
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - "DISABLE_INSTALL_DEMO_CONFIG=true"
            - "DISABLE_SECURITY_PLUGIN=true"
            - xpack.security.enabled=false
        depends_on:
            - usm-kibana
        ulimits:
            memlock:
                soft: -1
                hard: -1
        deploy:
            resources:
                limits:
                    memory: 2048M
        networks:
            - usm-net

    usm-kibana:
        container_name: usm-kibana
        image: kibana:8.8.0
        environment:
            - ELASTICSEARCH_HOSTS=http://usm-elastic:9200
        ports:
            - 5601:5601
        networks:
            - usm-net

    usm-worker:
        image: usm-worker
        build:
            context: "."
            dockerfile: Dockerfile-worker
        container_name: usm-worker
        depends_on:
            - redis
        networks:
            - usm-net
networks:
    usm-net: